% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wamtram.R
\name{wamtram}
\alias{wamtram}
\title{Top-level Turtle Tagging data import Drake Plan}
\usage{
wamtram()
}
\description{
\itemize{
\item Download all turtle tagging data (no attachments)
\item Load existing nesting records from WAStD: load only a minimal set of
source, source ID, QA status to determine later what to
create / update / skip:
\itemize{
\item does not exist in WAStD: create (POST)
\item exists in WAStD with status "new": update (PATCH)
\item exists in WAStD with status higher than "new": skip (and message)
\item Make (transform) ODKC to WAStD data
\item Load transformed data into WAStD's API (create/update/skip)
\item No QA
}
}
}
\examples{
\dontrun{
wastdr::wastdr_setup(api_url = Sys.getenv("WASTDR_API_DEV_URL"),
                     api_token = Sys.getenv("WASTDR_API_DEV_TOKEN"))
wastdr::wastdr_setup(api_url = Sys.getenv("WASTDR_API_TEST_URL"),
                     api_token = Sys.getenv("WASTDR_API_TEST_TOKEN"))
wastdr::wastdr_setup(api_url = Sys.getenv("WASTDR_API_URL"),
                     api_token = Sys.getenv("WASTDR_API_TOKEN"))

library(etlTurtleNesting)
library(wastdr)
library(drake)

Sys.setenv(W2_IMPORT_UPDATE_EXISTING=TRUE)
Sys.setenv(W2_IMPORT_UPDATE_EXISTING=FALSE)

visNetwork::visSave(vis_drake_graph(wamtram()), "drake_graph.html")
drake::vis_drake_graph(wamtram())
drake::clean()
drake::clean("user_qa")
drake::make(plan = etlTurtleNesting::wamtram())
drake::make(plan = etlTurtleNesting::wamtram(), targets = c("user_qa"))
drake::make(etlTurtleNesting::wamtram(), lock_envir = FALSE)

deps_code(quote(knitr_in("doc/qa_sites_w2.Rmd")))
deps_code(quote(knitr_in("doc/qa_users_w2.Rmd")))
}
}

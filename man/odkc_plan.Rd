% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/odkc_plan.R
\name{odkc_plan}
\alias{odkc_plan}
\title{Top-level Turtle Nesting Census data import Drake Plan}
\usage{
odkc_plan()
}
\description{
\itemize{
\item Download all ODKC data including attachments
\item Load existing nesting records from WAStD: load only a minimal set of
source, source ID, QA status to determine later what to
create / update / skip:
\itemize{
\item does not exist in WAStD: create (POST)
\item exists in WAStD with status "new": update (PATCH)
\item exists in WAStD with status higher than "new": skip (and message)
\item Make (transform) ODKC to WAStD data
\item Load transformed data into WAStD's API (create/update/skip)
\item No QA
}
}
}
\examples{
\dontrun{

# Step 1: New users (username, name, phone, email, role)
# 400 for existing, 201 for new
Append new users to spreadsheet: username, name, email, phone, role
users <- here::here("users.csv") \%>\%
  readr::read_csv(col_types = "ccccc") \%>\%
  wastdr::wastd_bulk_post("users",
  #api_url = Sys.getenv("WASTDR_API_DEV_URL"),
  #api_token = Sys.getenv("WASTDR_API_DEV_TOKEN"),
  verbose = TRUE)

users_dev <- here::here("users.csv") \%>\%
  readr::read_csv(col_types = "ccccc") \%>\%
  wastdr::wastd_bulk_post("users",
  api_url = Sys.getenv("WASTDR_API_DEV_URL"),
  api_token = Sys.getenv("WASTDR_API_DEV_TOKEN"),
  verbose = TRUE)

# save point for debug
save(atkn, aurl, vbse, updt, odkc_ex, odkc_tf, odkc_up,
wastd_data, wastd_users, user_mapping, file="odkc_import.RData")
load("odkc_import.RData")

wastdr::wastdr_setup(api_url = Sys.getenv("WASTDR_API_DEV_URL"),
                     api_token = Sys.getenv("WASTDR_API_DEV_TOKEN"))
wastdr::wastdr_setup(api_url = Sys.getenv("WASTDR_API_TEST_URL"),
                     api_token = Sys.getenv("WASTDR_API_TEST_TOKEN"))
wastdr::wastdr_setup(api_url = Sys.getenv("WASTDR_API_URL"),
                     api_token = Sys.getenv("WASTDR_API_TOKEN"))
Sys.setenv(ODKC_IMPORT_UPDATE_EXISTING=TRUE)
Sys.setenv(ODKC_IMPORT_UPDATE_EXISTING=FALSE)
Sys.setenv(ODKC_IMPORT_UPDATE_MEDIA=TRUE)
Sys.setenv(ODKC_IMPORT_UPDATE_MEDIA=FALSE)
Sys.setenv(ODKC_DOWNLOAD=TRUE) # Dl media files
Sys.setenv(ODKC_DOWNLOAD=FALSE)

library(etlTurtleNesting)
library(wastdr)
library(drake)

odkc_plan()
drake::vis_drake_graph(odkc_plan())
drake::clean()
drake::clean("wastd_users") # after updating WAStD user aliases
drake::clean("upload_to_wastd")
drake::clean("up_media")
drake::clean("site_qa")
drake::make(odkc_plan(), lock_envir = FALSE)

deps_code(quote(knitr_in("doc/qa_sites.Rmd")))
deps_code(quote(knitr_in("doc/qa_users.Rmd")))
}
}
